# Generated by Django 4.2.7 on 2025-09-30 13:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('learning', '0003_kotobacategory_kotobaexample_kotobasubcategory_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlashcardDeck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('deck_type', models.CharField(choices=[('vocabulary', '語彙'), ('kanji', '漢字'), ('grammar', '文法'), ('medical', '医療用語'), ('caregiving', '介護用語')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'flashcard_decks',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FlashcardCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front_text', models.TextField(help_text='Front of card (Japanese)')),
                ('back_text', models.TextField(help_text='Back of card (Translation/Meaning)')),
                ('front_reading', models.CharField(blank=True, help_text='Furigana/Reading', max_length=200)),
                ('example_sentence', models.TextField(blank=True)),
                ('example_translation', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='learning.flashcarddeck')),
            ],
            options={
                'db_table': 'flashcard_cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='UserFlashcardProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ease_factor', models.FloatField(default=2.5)),
                ('interval_days', models.IntegerField(default=0)),
                ('repetitions', models.IntegerField(default=0)),
                ('last_difficulty', models.IntegerField(blank=True, choices=[(1, 'Again'), (2, 'Hard'), (3, 'Good'), (4, 'Easy')], null=True)),
                ('next_review_date', models.DateField(blank=True, null=True)),
                ('is_mastered', models.BooleanField(default=False)),
                ('total_reviews', models.IntegerField(default=0)),
                ('correct_reviews', models.IntegerField(default=0)),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learning.flashcardcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcard_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_flashcard_progress',
                'indexes': [models.Index(fields=['user', 'next_review_date'], name='user_flashc_user_id_736679_idx'), models.Index(fields=['user', 'is_mastered'], name='user_flashc_user_id_43229c_idx')],
                'unique_together': {('user', 'card')},
            },
        ),
    ]
